#version 330 core

//Light Direction coming from the vertex shader
in vec3 lightDirV;
//Normal coming from the vertex shader
in vec3 vNormalV;
//halfvec coming from the vertex shader
in vec3 halfVec; 
//UV coming from the vertex shader
in vec2 UV; 

//Different colours
uniform vec3 lightColour    = {1,1,1};
uniform vec3 emissiveColour = {0,0,0};
uniform vec3 ambientColour  = {0.1f,0.1f,0.2f};
uniform vec3 diffuseColour  = {0.8f,0.1f,0.1f};
uniform vec3 specularColour = {0.0f,0.0f,0.0f};
//Up vector for calculations
uniform vec3 up 	    = {0.0f,1.0f,0.0f};
//Shininess value
uniform float shininess     = 1.2f;
//alpha value
uniform float alpha         = 1.0f;
//snow
uniform sampler2D textSampler0; 	
//rock
uniform sampler2D textSampler1;

//out put the colour
out vec4 colour;

void main(){
//Give me the normalised textures
vec3 Normal = normalize(texture2D(textSampler1, UV).rgb*2.0 - 1.0);
vec3 diffuse = texture(textSampler0, UV).rgb  * max( dot( Normal, lightDirV ), 0);
vec3 specular = texture(textSampler0, UV ).rgb * dot( Normal, lightDirV ) * max( dot( Normal, halfVec ), 0) * shininess;
vec3 temp = diffuse + specular +emissiveColour + ambientColour ;
colour = vec4(temp.x,temp.y,temp.z,1.0f);

}