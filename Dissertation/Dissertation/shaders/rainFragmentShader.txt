#version 330 core

//Light Direction coming from the vertex shader
in vec3 lightDirV;
//Normal coming from the vertex shader
in vec3 vNormalV;
//halfvec coming from the vertex shader
in vec3 halfVec; 
//UV coming from the vertex shader
in vec2 UV; 

//Different colours
uniform vec3 lightColour	= {1,1,1};
uniform vec3 emissiveColour = {0,0,0};
uniform vec3 ambientColour  = {0.1f,0.1f,0.2f};
uniform vec3 diffuseColour  = {0.8f,0.1f,0.1f};
uniform vec3 specularColour = {0.0f,0.0f,0.0f};
//Up vector for calculations
uniform vec3 up 			= {0.0f,1.0f,0.0f};
//Shininess value
uniform float shininess     = 0.01f;
//alpha value
uniform float alpha         = 1.0f;

//rain1
uniform sampler2D textSampler0; 

//rain2
uniform sampler2D textSampler1; 

//rain3
uniform sampler2D textSampler2; 


//out put the colour
out vec4 colour;

void main(){
float offset = 10f;
float offset2 = 15f;
float offset3 = 35f;
vec3 textureColour = texture2D(textSampler0,UV.xy * offset).xyz;
vec3 textureColour2 = texture2D(textSampler0,UV.xy* offset2).xyz;
vec3 textureColour3 = texture2D(textSampler0,UV.xy* offset3).xyz;
float alpha,alpha2,alpha3;
///////////FIRST TEXTURE
//alpha = textureColour.x;
if(textureColour.x  <= 0.1f){
alpha = 0.0f;
}
else
{
alpha = 0.2f;
}
vec4 temp_rain = vec4(textureColour.x,textureColour.y,textureColour.z,alpha);
///////////second TEXTURE
//alpha2 = textureColour2.x;
if(textureColour2.x  <= 0.1f){
alpha2 = 0.0f;
}
else
{
alpha2 =  0.2f;;
}
vec4 temp_rain2 = vec4(textureColour2.x,textureColour2.y,textureColour2.z,alpha2);
///////////third TEXTURE
//alpha3 = textureColour3.x;
if(textureColour3.x  <= 0.1f){
alpha3 = 0.0f;
}
else
{
alpha3 =  0.2f;;
}
vec4 temp_rain3 = vec4(textureColour3.x,textureColour3.y,textureColour3.z,alpha3);
colour = temp_rain + temp_rain2 + temp_rain3;


}