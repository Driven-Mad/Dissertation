#version 330 core

//Light Direction coming from the vertex shader
in vec3 lightDirV;
//Normal coming from the vertex shader
in vec3 vNormalV;
//halfvec coming from the vertex shader
in vec3 halfVec; 
//UV coming from the vertex shader
in vec2 UV; 

//Different colours
uniform vec3 lightColour	= {1,1,1};
uniform vec3 emissiveColour = {0,0,0};
uniform vec3 ambientColour  = {0.1f,0.1f,0.2f};
uniform vec3 diffuseColour  = {0.8f,0.1f,0.1f};
uniform vec3 specularColour = {0.0f,0.0f,0.0f};
//Up vector for calculations
uniform vec3 up 			= {0.0f,1.0f,0.0f};
//Shininess value
uniform float shininess     = 0.01f;
//alpha value
uniform float alpha         = 1.0f;

//sky
uniform sampler2D textSampler4; 

//out put the colour
out vec3 colour;

void main(){
vec3 skyTextureNormal = normalize(texture2D(textSampler4, UV).rgb*2.0 - 1.0);
vec3 diffuse = texture(textSampler4, UV).rgb * lightColour * max( dot( skyTextureNormal, lightDirV ), 0);
vec3 specular= texture(textSampler4, UV).rgb * lightColour * dot( skyTextureNormal, lightDirV ) * max( dot( skyTextureNormal, halfVec ), 0) * shininess;
colour = diffuse + specular + emissiveColour + ambientColour ;
}